@page "/cart"
@using GameVault.Client.Components
@using GameVault.Client.Services
@using GameVault.Shared.DTOs
@using GameVault.Shared.Models
@inject NavigationManager Navigation
@inject CartService CartService
@inject AuthService AuthService

<h1>Shopping Cart</h1>

@if (AuthService.IsAuthenticated)
{
    if (_isLoading)
    {
        <p>Loading cart...</p>
    }
    else if (_cart == null || _cart.Items.Count == 0)
    {
        <div class="empty-cart">
            <p>Your cart is empty</p>
            <button @onclick="GoToBrowse">Continue Shopping</button>
        </div>
    }
    else
    {
        <div class="cart-container">
            <div class="cart-items">
                @foreach (var item in _cart.Items)
                {
                    <@CartItemCar d Item="@item" OnCartChanged="RefreshCartAsync" />
                }
            </div>

            <@CartSummar y Cart="@_cart" />
        </div>
    }
}
else if (!AuthService.IsAuthenticated)
{
    <p>Please <a href="/login">log in </a>to view your cart.</p>
}

@code {
    private CartDTO? _cart;
    private bool _isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadCartAsync();
    }

    private async Task LoadCartAsync()
    {
        _isLoading = true;

        _cart = await CartService.LoadCartAsync();

        _isLoading = false;
    }

    private async Task RefreshCartAsync()
    {
        await LoadCartAsync();
        StateHasChanged();
    }

    private void GoToBrowse()
    {

    }
}