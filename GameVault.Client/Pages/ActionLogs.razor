@page "/actionLogs"
@using GameVault.Client.Services
@using GameVault.Shared.Models
@inject Services.AuthService AuthService
@inject Services.LogService LogService
@inject NavigationManager Navigation
@inject IJSRuntime JS

<h3>Action Logs</h3>

@if (entries == null)
{
    <p><em>Loading...</em></p>
}
else if (entries.Count == 0)
{
    <p><em>No data found.</em></p>
}
else
{
    <table>
        <thead>
            <tr>
                <th>Timestamp</th>
                <th>Type</th>
                <th>Affected Object ID</th>
                <th>Status</th>
                <th>Summary</th>
                <th>Details</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var entry in entries)
            {
                <tr>
                    <td>@entry.Timestamp.ToString()</td>
                    @* TODO: Display logs differently by type *@
                    <td>@entry.Type</td>
                    @* TODO: Make ObjectId field link to object (type of object based on type of log) *@
                    <td>@entry.ObjectId</td>
                    @* TODO: Display logs differently by type *@
                    <td>@entry.Status</td>
                    <td>@entry.Summary</td>
                    <td>@entry.Details</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<LogDTO>? entries;
    private string errorMessage = string.Empty;

    private async Task LoadData()
    {
        entries = null;

        // TODO: Make sure logged in, etc.

        LogListResponse result = await LogService.GetAllLogsAsync();
        entries = result.Logs;
        errorMessage = result.Message ?? "";
        await InvokeAsync(StateHasChanged);
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await LoadData();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Exception: {ex}");
            errorMessage = $"Error loading action logs: {ex.Message}";
        }
    }
}