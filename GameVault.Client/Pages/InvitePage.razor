@page "/invitePage"
@inject Services.AuthService AuthService
@inject NavigationManager Navigation

<h3>Invite Page</h3>

<EditForm Model="@model" OnValidSubmit="@HandleAdminInvite">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div style="margin-bottom:8px;">
        <label>Email</label><br />
        <InputText @bind-Value="model.Email" />
    </div>
    <div style="margin-bottom:8px;">
        <label>Confirm Email</label><br />
        <InputText @bind-Value="model.ConfirmEmail" />
    </div>
    <button type="submit">Invite Admin</button>
</EditForm>

@if (!string.IsNullOrEmpty(StatusMessage))
{
    <div>
        @StatusMessage
    </div>
}

@code {
    private inviteModel model = new();
    private string? StatusMessage;

    private void HandleAdminInvite()
    {
        if (model.Email != model.ConfirmEmail)
        {
            StatusMessage = "Error: Email addresses do not match.";
            return;
        }
        try
        {
            //Send Email
            bool inviteSuccess = false;
            if (inviteSuccess)
            {
                StatusMessage = $"Success: Invite sent to {model.Email}";
                model = new();
                Navigation.NavigateTo("/invitePage");
            }
            else
            {
                StatusMessage = $"Error: Invite Failed to send.";
                Navigation.NavigateTo("/invitePage");
            }
        }
        catch
        {
            StatusMessage = "Error: Unexpected Failure";
            Navigation.NavigateTo("/invitePage");
        }
    }

    public class inviteModel
    {
        public string? Email { get; set; }
        public string? ConfirmEmail { get; set; }
        public string Role { get; set; } = "Customer";
    }
}