@page "/register/vendor"
@inject Services.AuthService AuthService
@inject NavigationManager Navigation

<div class="auth-container">
    <div class="auth-card">
        <div class="auth-header">
            <h1 class="auth-title">Become a Vendor</h1>
            <p class="auth-subtitle">Start selling games on GameVault</p>
        </div>

        <form class="auth-form" @onsubmit="Register" @onsubmit:preventDefault="true">
            <div class="form-group">
                <label for="email" class="form-label">Email Address</label>
                <input 
                    type="email" 
                    id="email"
                    class="form-control @(emailError != null ? "is-invalid" : "")" 
                    @bind="email" 
                    @oninput="ClearEmailError"
                    placeholder="Enter your email"
                    required />
                @if (emailError != null)
                {
                    <div class="invalid-feedback">@emailError</div>
                }
            </div>

            <div class="form-group">
                <label for="password" class="form-label">Password</label>
                <div class="password-input-group">
                    <input 
                        type="@(showPassword ? "text" : "password")" 
                        id="password"
                        class="form-control @(passwordError != null ? "is-invalid" : "")" 
                        @bind="password" 
                        @oninput="ClearPasswordError"
                        placeholder="Create a password"
                        required />
                    <button 
                        type="button" 
                        class="password-toggle" 
                        @onclick="TogglePasswordVisibility"
                        title="@(showPassword ? "Hide password" : "Show password")">
                        <i class="bi @(showPassword ? "bi-eye-slash" : "bi-eye")"></i>
                    </button>
                </div>
                @if (passwordError != null)
                {
                    <div class="invalid-feedback">@passwordError</div>
                }
            </div>

            <div class="form-group">
                <label for="displayName" class="form-label">Your Name</label>
                <input 
                    type="text" 
                    id="displayName"
                    class="form-control @(displayNameError != null ? "is-invalid" : "")" 
                    @bind="displayName" 
                    @oninput="ClearDisplayNameError"
                    placeholder="Enter your full name"
                    required />
                @if (displayNameError != null)
                {
                    <div class="invalid-feedback">@displayNameError</div>
                }
            </div>

            <div class="form-group">
                <label for="businessName" class="form-label">Business Name</label>
                <input 
                    type="text" 
                    id="businessName"
                    class="form-control @(businessNameError != null ? "is-invalid" : "")" 
                    @bind="businessName" 
                    @oninput="ClearBusinessNameError"
                    placeholder="Enter your business name"
                    required />
                @if (businessNameError != null)
                {
                    <div class="invalid-feedback">@businessNameError</div>
                }
            </div>

            <div class="form-group">
                <label for="businessDescription" class="form-label">Business Description</label>
                <textarea 
                    id="businessDescription"
                    class="form-control textarea @(businessDescriptionError != null ? "is-invalid" : "")" 
                    @bind="businessDescription" 
                    @oninput="ClearBusinessDescriptionError"
                    placeholder="Tell us about your business and what games you plan to sell"
                    required></textarea>
                @if (businessDescriptionError != null)
                {
                    <div class="invalid-feedback">@businessDescriptionError</div>
                }
            </div>

            @if (!string.IsNullOrEmpty(error))
            {
                <div class="alert alert-danger" role="alert">
                    <i class="bi bi-exclamation-triangle-fill me-2"></i>
                    @error
                </div>
            }

            <div class="alert alert-info" role="alert">
                <i class="bi bi-info-circle-fill me-2"></i>
                <strong>Note:</strong> Your vendor application will be reviewed by our team. You'll receive an email once approved.
            </div>

            <button 
                type="submit" 
                class="btn btn-primary" 
                disabled="@isLoading">
                @if (isLoading)
                {
                    <span class="spinner-border-sm me-2"></span>
                    @("Submitting Application...")
                }
                else
                {
                    <i class="bi bi-shop me-2"></i>
                    @("Submit Application")
                }
            </button>
        </form>

        <div class="auth-footer">
            <p class="auth-footer-text">
                Already have an account? 
                <a href="/login" class="auth-link">Sign in here</a>
            </p>
            <p class="auth-footer-text">
                Just want to buy games? 
                <a href="/register/customer" class="auth-link">Register as Customer</a>
            </p>
        </div>
    </div>
</div>

@code {
    private string email = "";
    private string password = "";
    private string displayName = "";
    private string businessName = "";
    private string businessDescription = "";
    private string? error;
    private string? emailError;
    private string? passwordError;
    private string? displayNameError;
    private string? businessNameError;
    private string? businessDescriptionError;
    private bool isLoading = false;
    private bool showPassword = false;

    private void ClearEmailError()
    {
        emailError = null;
        error = null;
    }

    private void ClearPasswordError()
    {
        passwordError = null;
        error = null;
    }

    private void ClearDisplayNameError()
    {
        displayNameError = null;
        error = null;
    }

    private void ClearBusinessNameError()
    {
        businessNameError = null;
        error = null;
    }

    private void ClearBusinessDescriptionError()
    {
        businessDescriptionError = null;
        error = null;
    }

    private void TogglePasswordVisibility()
    {
        showPassword = !showPassword;
    }

    private bool ValidateForm()
    {
        bool isValid = true;
        emailError = null;
        passwordError = null;
        displayNameError = null;
        businessNameError = null;
        businessDescriptionError = null;

        if (string.IsNullOrWhiteSpace(email))
        {
            emailError = "Email is required";
            isValid = false;
        }
        else if (!email.Contains("@") || !email.Contains("."))
        {
            emailError = "Please enter a valid email address";
            isValid = false;
        }

        if (string.IsNullOrWhiteSpace(password))
        {
            passwordError = "Password is required";
            isValid = false;
        }
        else if (password.Length < 6)
        {
            passwordError = "Password must be at least 6 characters";
            isValid = false;
        }

        if (string.IsNullOrWhiteSpace(displayName))
        {
            displayNameError = "Your name is required";
            isValid = false;
        }

        if (string.IsNullOrWhiteSpace(businessName))
        {
            businessNameError = "Business name is required";
            isValid = false;
        }

        if (string.IsNullOrWhiteSpace(businessDescription))
        {
            businessDescriptionError = "Business description is required";
            isValid = false;
        }
        else if (businessDescription.Length < 20)
        {
            businessDescriptionError = "Please provide a more detailed description (at least 20 characters)";
            isValid = false;
        }

        return isValid;
    }

    private async Task Register()
    {
        if (!ValidateForm())
        {
            return;
        }

        isLoading = true;
        error = null;

        try
        {
            var result = await AuthService.RegisterVendorAsync(
                email, password, displayName, businessName, businessDescription);
            
            if (result?.Success == true)
            {
                Navigation.NavigateTo("/");
            }
            else
            {
                error = result?.Message ?? "Registration failed. Please try again.";
            }
        }
        catch (Exception)
        {
            error = "An unexpected error occurred. Please try again later.";
        }
        finally
        {
            isLoading = false;
        }
    }
}